#!/sbin/openrc-run

# The first boot init service

# read kernel options
init_KOPT() {
	eval "set -- $(cat /proc/cmdline 2>/dev/null)"
	for opt; do
		case "$opt" in
			data=*)
				eval "KOPT_${opt%%=*}='${opt#*=}'" ;;
			vol_*=*)
				eval "KOPT_${opt%%=*}='${opt#*=}'" ;;
			share_*=*)
				eval "KOPT_${opt%%=*}='${opt#*=}'" ;;
		esac
	done
}

format_mount() {
	mkdir -p "$2"

	if ! mount "$1" "$2"; then
		mkfs.ext4 "$1"

		if ! mount "$1" "$2"; then
			echo "UNABLE TO FORMAT $1"
		else
			echo "Formatted $2"
		fi
	else
		echo "Mounted $2"
	fi
}

start() {
	init_KOPT
	local rc=0
	ebegin "Starting ${RC_SVCNAME}"
	if [ -n "$KOPT_data" ]; then
		format_mount $KOPT_data /data

		if ! [ -e /data/var/lib ]; then
			mkdir -p /data/var/lib
			cp -a /var/lib/* /data/var/lib/
		fi

		rm -rf /var/lib
		ln -sf /data/var/lib /var/lib
	fi

	for i in ${!KOPT_vol_*}; do
		name=${i#"KOPT_vol_"}
		dev="${!i}"

		mkdir -p "/vol/$name"
		format_mount "$dev" "/vol/$name"
		chmod a+rwx "/vol/$name"
		echo "Mounted /vol/$name"
	done

	for i in ${!KOPT_share_*}; do
		name=${i#"KOPT_share_"}
		tag="${!i}"

		mkdir -p "/share/$name"
		mount -t virtiofs $opts "$tag" "/share/$name"
		echo "Mounted /share/$name"
	done
	
	eend $rc
}

